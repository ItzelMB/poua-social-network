{"version":3,"sources":["constants/routes.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/SignIn/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["HOME","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","user","uid","db","ref","concat","users","message","messages","app","initializeApp","database","serverValue","ServerValue","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","_ref","type","onClick","NavigationAuth","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","set","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","SignInFormBase","SignInForm","SignInPage","SignUp_SignUpLink","MessagesBase","onChangeText","text","onCreateMessage","userId","time","TIMESTAMP","onRemoveMessage","remove","onEditPost","messageSnapshot","objectWithoutProperties","loading","on","snapshot","messageObject","val","messageList","keys","map","loadinf","off","_this3","Home_MessageList","MessageItem","_this4","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","_this$props","Messages","MessageList","Home_MessageItem","Account","AdminPage","usersObject","usersList","Admin_UserList","UserList","components_Navigation","react_router","exact","path","component","LandingPage","HomePage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sNAGaA,EAAO,iBCCLC,EAFSC,IAAMC,cAAc,yCCAtCC,EAAkBF,IAAMC,cAAc,MAE/BE,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC1CC,EAAAC,EAAAC,cAACN,EAAgBO,SAAjB,KACK,SAAAC,GAAQ,OAAIJ,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeP,EAAf,CAAsBK,SAAUA,SAItCR,qBCNTW,eAAS,CACXC,OAAQC,0CACRC,WAAYD,2BACZE,YAAaF,kCACbG,UAAWH,WACXI,cAAeJ,uBACfK,kBAAmBL,iBCPRM,EDWX,SAAAA,IAAc,IAAAC,EAAAC,KAAAZ,OAAAa,EAAA,EAAAb,CAAAY,KAAAF,GAAAE,KAUdE,iCAAmC,SAACC,EAAOC,GAAR,OACnCL,EAAKM,KAAKC,+BAA+BH,EAAOC,IAXlCJ,KAadO,6BAA+B,SAACJ,EAAOC,GAAR,OAC/BL,EAAKM,KAAKG,2BAA2BL,EAAOC,IAd9BJ,KAgBdS,UAAY,kBAAMV,EAAKM,KAAKK,WAhBdV,KAwBdW,KAAO,SAAAC,GAAG,OAAIb,EAAKc,GAAGC,IAAR,SAAAC,OAAqBH,KAxBrBZ,KAyBdgB,MAAQ,kBAAMjB,EAAKc,GAAGC,IAAI,UAzBZd,KA4BdiB,QAAU,SAAAL,GAAG,OAAIb,EAAKc,GAAGC,IAAR,YAAAC,OAAwBH,KA5B3BZ,KA6BdkB,SAAW,kBAAMnB,EAAKc,GAAGC,IAAI,aA5BzBK,IAAIC,cAAc9B,GAElBU,KAAKK,KAAOc,IAAId,OAChBL,KAAKa,GAAKM,IAAIE,WAEdrB,KAAKsB,YAAcH,IAAIE,SAASE,aEqBzBC,EApCY,SAAA3C,GAAa,IAC9B4C,EAD8B,SAAAC,GAEhC,SAAAD,EAAY3C,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAyB,IACf1B,EAAAX,OAAAuC,EAAA,EAAAvC,CAAAY,KAAAZ,OAAAwC,EAAA,EAAAxC,CAAAqC,GAAAI,KAAA7B,KAAMlB,KAEDgD,MAAQ,CACTC,SAAU,MAJChC,EAFa,OAAAX,OAAA4C,EAAA,EAAA5C,CAAAqC,EAAAC,GAAAtC,OAAA6C,EAAA,EAAA7C,CAAAqC,EAAA,EAAAS,IAAA,oBAAAC,MAAA,WAUZ,IAAAC,EAAApC,KAChBA,KAAKqC,SAAWrC,KAAKlB,MAAMK,SAASkB,KAAKiC,mBACrC,SAAAP,GACIA,EACEK,EAAKG,SAAS,CAAER,aAChBK,EAAKG,SAAS,CAAER,SAAS,WAfP,CAAAG,IAAA,uBAAAC,MAAA,WAqB5BnC,KAAKqC,aArBuB,CAAAH,IAAA,SAAAC,MAAA,WAyB5B,OACIpD,EAAAC,EAAAC,cAACuD,EAAgBC,SAAjB,CAA0BN,MAAOnC,KAAK8B,MAAMC,UACxChD,EAAAC,EAAAC,cAACJ,EAAcmB,KAAKlB,YA3BA2C,EAAA,CACHhD,IAAMI,WAgCvC,OAAOD,EAAa6C,YCCTiB,EA/BW,SAAAC,GAAS,OAAI,SAAA9D,GAAa,IAC1C+D,EAD0C,SAAAlB,GAAA,SAAAkB,IAAA,OAAAxD,OAAAa,EAAA,EAAAb,CAAAY,KAAA4C,GAAAxD,OAAAuC,EAAA,EAAAvC,CAAAY,KAAAZ,OAAAwC,EAAA,EAAAxC,CAAAwD,GAAAC,MAAA7C,KAAA8C,YAAA,OAAA1D,OAAA4C,EAAA,EAAA5C,CAAAwD,EAAAlB,GAAAtC,OAAA6C,EAAA,EAAA7C,CAAAwD,EAAA,EAAAV,IAAA,oBAAAC,MAAA,WAExB,IAAApC,EAAAC,KAChBA,KAAKqC,SAAWrC,KAAKlB,MAAMK,SAASkB,KAAKiC,mBAAmB,SAAAP,GACnDY,EAAUZ,IACXhC,EAAKjB,MAAMiE,QAAQC,KNXhB,gBMM6B,CAAAd,IAAA,uBAAAC,MAAA,WAWxCnC,KAAKqC,aAXmC,CAAAH,IAAA,SAAAC,MAAA,WAclC,IAAAC,EAAApC,KACN,OACIjB,EAAAC,EAAAC,cAACuD,EAAgBtD,SAAjB,KACK,SAAA6C,GAAQ,OACLY,EAAUZ,GAAYhD,EAAAC,EAAAC,cAACJ,EAAcuD,EAAKtD,OAAY,WAlB1B8D,EAAA,CAChBnE,IAAMI,WAwBtC,OAAOoE,YACHC,IACAtE,EAFGqE,CAGLL,KC7BShE,IAJO,SAAAuE,GAAA,IAAGhE,EAAHgE,EAAGhE,SAAH,OAClBJ,EAAAC,EAAAC,cAAA,UAAQmE,KAAK,SAASC,QAASlE,EAASsB,WAAxC,sBCYE6C,EAAiB,kBACfvE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GRlBC,KQkBP,YACJzE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GAAIC,GAAV,SACJ1E,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GRfD,UQeL,WACJzE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACyE,EAAD,SAIVC,EAAoB,kBACtB5E,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GR3BK,KQ2BX,YACJzE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GR1BK,YQ0BX,wBAIGI,EA1BI,kBACf7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuD,EAAgBtD,SAAjB,KACK,SAAA6C,GAAQ,OACLA,EAAWhD,EAAAC,EAAAC,cAAC4E,EAAD,MAAqB9E,EAAAC,EAAAC,cAAC6E,EAAD,UCAjCC,EAPC,kBACZhF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uCCSF+E,EAAgB,CAClBC,SAAU,GACV9D,MAAO,GACP+D,YAAa,GACbC,YAAa,GACbC,MAAO,MAGLC,cACF,SAAAA,EAAYvF,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAqE,IACftE,EAAAX,OAAAuC,EAAA,EAAAvC,CAAAY,KAAAZ,OAAAwC,EAAA,EAAAxC,CAAAiF,GAAAxC,KAAA7B,KAAMlB,KAKVwF,SAAW,SAAAC,GAAS,IAAAC,EACyBzE,EAAK+B,MAAtCmC,EADQO,EACRP,SAAU9D,EADFqE,EACErE,MAAO+D,EADTM,EACSN,YAEzBnE,EAAKjB,MAAMK,SACVe,iCAAiCC,EAAO+D,GACxCO,KAAK,SAAA1C,GACF,OAAOhC,EAAKjB,MAAMK,SACjBwB,KAAKoB,EAASpB,KAAKC,KACnB8D,IAAI,CACDT,WACA9D,YAGPsE,KAAK,WACF1E,EAAKwC,SAALnD,OAAAuF,EAAA,EAAAvF,CAAA,GAAmB4E,IACnBjE,EAAKjB,MAAMiE,QAAQC,KAAKS,KAE3BmB,MAAM,SAAAR,GACHrE,EAAKwC,SAAS,CAAE6B,YAGpBG,EAAMM,kBA3BS9E,EA8BnB+E,SAAW,SAAAP,GACPxE,EAAKwC,SAALnD,OAAA2F,EAAA,EAAA3F,CAAA,GAAiBmF,EAAMS,OAAOC,KAAOV,EAAMS,OAAO7C,SA5BlDpC,EAAK+B,MAAL1C,OAAAuF,EAAA,EAAAvF,CAAA,GAAkB4E,GAHHjE,wEAkCV,IAAAmF,EAGDlF,KAAK8B,MADLmC,EAFCiB,EAEDjB,SAAU9D,EAFT+E,EAES/E,MAAO+D,EAFhBgB,EAEgBhB,YAAaC,EAF7Be,EAE6Bf,YAAaC,EAF1Cc,EAE0Cd,MAGzCe,EAAYjB,IAAgBC,GAA+B,KAAhBD,GAAgC,KAAV/D,GAA6B,KAAb8D,EAEvF,OACIlF,EAAAC,EAAAC,cAAA,QAAMqF,SAAUtE,KAAKsE,UACjBvF,EAAAC,EAAAC,cAAA,SAAOgG,KAAK,WAAW9C,MAAO8B,EAAUa,SAAU9E,KAAK8E,SAAU1B,KAAK,OAAOgC,YAAY,oBACzFrG,EAAAC,EAAAC,cAAA,SAAOgG,KAAK,QAAQ9C,MAAOhC,EAAO2E,SAAU9E,KAAK8E,SAAU1B,KAAK,OAAOgC,YAAY,0BACnFrG,EAAAC,EAAAC,cAAA,SAAOgG,KAAK,cAAc9C,MAAO+B,EAAaY,SAAU9E,KAAK8E,SAAU1B,KAAK,WAAWgC,YAAY,kBACnGrG,EAAAC,EAAAC,cAAA,SAAOgG,KAAK,cAAc9C,MAAOgC,EAAaW,SAAU9E,KAAK8E,SAAU1B,KAAK,WAAWgC,YAAY,4BACnGrG,EAAAC,EAAAC,cAAA,UAAQoG,SAAUF,EAAW/B,KAAK,UAAlC,eAECgB,GAASrF,EAAAC,EAAAC,cAAA,SAAImF,EAAMnD,iBAlDPpC,aAwDvByG,EAAa,kBACfvG,EAAAC,EAAAC,cAAA,kCAAsBF,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,GV9ET,aU8EG,4BAGpB+B,EAAatC,YACfC,IACAtE,EAFeqE,CAGboB,GAESmB,EAhFI,kBACfzG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACsG,EAAD,QCMFvB,EAAgB,CAClB7D,MAAO,GACPC,SAAU,GACVgE,MAAO,MAGLqB,cACF,SAAAA,EAAY3G,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAyF,IACf1F,EAAAX,OAAAuC,EAAA,EAAAvC,CAAAY,KAAAZ,OAAAwC,EAAA,EAAAxC,CAAAqG,GAAA5D,KAAA7B,KAAMlB,KAKVwF,SAAW,SAAAC,GAAS,IAAAC,EACYzE,EAAK+B,MAAzB3B,EADQqE,EACRrE,MAAOC,EADCoE,EACDpE,SAEfL,EAAKjB,MAAMK,SACNoB,6BAA6BJ,EAAOC,GACpCqE,KAAK,WACF1E,EAAKwC,SAALnD,OAAAuF,EAAA,EAAAvF,CAAA,GAAmB4E,IACnBjE,EAAKjB,MAAMiE,QAAQC,KAAKS,KAE3BmB,MAAM,SAAAR,GACHrE,EAAKwC,SAAS,CAAE6B,YAGxBG,EAAMM,kBAnBS9E,EAsBnB+E,SAAW,SAAAP,GACPxE,EAAKwC,SAALnD,OAAA2F,EAAA,EAAA3F,CAAA,GAAiBmF,EAAMS,OAAOC,KAAOV,EAAMS,OAAO7C,SApBlDpC,EAAK+B,MAAL1C,OAAAuF,EAAA,EAAAvF,CAAA,GAAkB4E,GAHHjE,wEA0BV,IAAAmF,EAC8BlF,KAAK8B,MAAhC3B,EADH+E,EACG/E,MAAOC,EADV8E,EACU9E,SAAUgE,EADpBc,EACoBd,MAEnBe,EAAyB,KAAb/E,GAA6B,KAAVD,EAErC,OACIpB,EAAAC,EAAAC,cAAA,QAAMqF,SAAUtE,KAAKsE,UACjBvF,EAAAC,EAAAC,cAAA,SAAOgG,KAAK,QAAQ9C,MAAQhC,EAAO2E,SAAU9E,KAAK8E,SAAU1B,KAAK,OAAOgC,YAAY,0BACpFrG,EAAAC,EAAAC,cAAA,SAAOgG,KAAK,WAAW9C,MAAQ/B,EAAU0E,SAAU9E,KAAK8E,SAAU1B,KAAK,WAAWgC,YAAY,kBAC9FrG,EAAAC,EAAAC,cAAA,UAAQoG,SAAUF,EAAW/B,KAAK,UAAlC,qBAECgB,GAASrF,EAAAC,EAAAC,cAAA,SAAImF,EAAMnD,iBAtCPpC,aA4CvB6G,EAAazC,YACfC,IACAtE,EAFeqE,CAGjBwC,GAEaE,EA/DI,kBACf5G,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACyG,EAAD,MACA3G,EAAAC,EAAAC,cAAC2G,EAAD,gBCGFC,cACF,SAAAA,EAAY/G,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAA6F,IACf9F,EAAAX,OAAAuC,EAAA,EAAAvC,CAAAY,KAAAZ,OAAAwC,EAAA,EAAAxC,CAAAyG,GAAAhE,KAAA7B,KAAMlB,KASVgH,aAAe,SAAAvB,GACXxE,EAAKwC,SAAS,CAAEwD,KAAMxB,EAAMS,OAAO7C,SAXpBpC,EAcnBiG,gBAAkB,SAACzB,EAAOxC,GACtBhC,EAAKjB,MAAMK,SAAS+B,WAAW8B,KAAK,CAChC+C,KAAMhG,EAAK+B,MAAMiE,KACjBE,OAAQlE,EAASnB,IACjBsF,KAAMnG,EAAKjB,MAAMK,SAASmC,YAAY6E,YAG1CpG,EAAKwC,SAAS,CAAEwD,KAAM,KAEtBxB,EAAMM,kBAvBS9E,EA0BnBqG,gBAAkB,SAAAxF,GACdb,EAAKjB,MAAMK,SAAS8B,QAAQL,GAAKyF,UA3BlBtG,EA8BnBuG,WAAa,SAACrF,EAAS8E,GACiB9E,EAA5BL,IADoB,IACZ2F,EADYnH,OAAAoH,EAAA,EAAApH,CACQ6B,EADR,SAG5BlB,EAAKjB,MAAMK,SAAS8B,QAAQA,EAAQL,KAAK8D,IAAzCtF,OAAAuF,EAAA,EAAAvF,CAAA,GACOmH,EADP,CAEIR,OACAG,KAAMnG,EAAKjB,MAAMK,SAASmC,YAAY6E,cAjC1CpG,EAAK+B,MAAQ,CACTiE,KAAM,GACNU,SAAS,EACTvF,SAAU,IANCnB,mFAwCC,IAAAqC,EAAApC,KAChBA,KAAKuC,SAAS,CAAEkE,SAAS,IAEzBzG,KAAKlB,MAAMK,SAAS+B,WAAWwF,GAAG,QAAS,SAAAC,GACvC,IAAMC,EAAgBD,EAASE,MAE/B,GAAID,EAAe,CACf,IAAME,EAAc1H,OAAO2H,KAAKH,GAAeI,IAAI,SAAA9E,GAAG,OAAA9C,OAAAuF,EAAA,EAAAvF,CAAA,GAC/CwH,EAAc1E,GADiC,CAElDtB,IAAKsB,MAETE,EAAKG,SAAS,CACVrB,SAAU4F,EACVG,SAAS,SAGb7E,EAAKG,SAAS,CAAErB,SAAU,KAAMuF,SAAQ,qDAMhDzG,KAAKlB,MAAMK,SAAS+B,WAAWgG,uCAG1B,IAAAC,EAAAnH,KAAAwE,EAC+BxE,KAAK8B,MAAjCiE,EADHvB,EACGuB,KAAM7E,EADTsD,EACStD,SAAUuF,EADnBjC,EACmBiC,QAExB,OACI1H,EAAAC,EAAAC,cAACuD,EAAgBtD,SAAjB,KACK,SAAA6C,GAAQ,OACLhD,EAAAC,EAAAC,cAAA,WACKwH,GAAW1H,EAAAC,EAAAC,cAAA,0BACXiC,EACGnC,EAAAC,EAAAC,cAACmI,EAAD,CACArF,SAAUA,EACNb,SAAUA,EACVkF,gBAAiBe,EAAKf,gBACtBE,WAAYa,EAAKb,aAGrBvH,EAAAC,EAAAC,cAAA,8CAGJF,EAAAC,EAAAC,cAAA,QAAMqF,SAAU,SAAAC,GAAK,OAAI4C,EAAKnB,gBAAgBzB,EAAOxC,KACjDhD,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAOjB,MAAO4D,EAAMjB,SAAUqC,EAAKrB,eAC/C/G,EAAAC,EAAAC,cAAA,UAAQmE,KAAK,UAAb,uBAvFDvE,aAgGrBwI,cACF,SAAAA,EAAYvI,GAAO,IAAAwI,EAAA,OAAAlI,OAAAa,EAAA,EAAAb,CAAAY,KAAAqH,IACfC,EAAAlI,OAAAuC,EAAA,EAAAvC,CAAAY,KAAAZ,OAAAwC,EAAA,EAAAxC,CAAAiI,GAAAxF,KAAA7B,KAAMlB,KAQVyI,iBAAmB,WACfD,EAAK/E,SAAS,SAAAT,GAAK,MAAK,CACpB0F,UAAW1F,EAAM0F,SACjBC,SAAUH,EAAKxI,MAAMmC,QAAQ8E,SAZlBuB,EAgBnBI,iBAAmB,SAAAnD,GACf+C,EAAK/E,SAAS,CAAEkF,SAAUlD,EAAMS,OAAO7C,SAjBxBmF,EAoBnBK,eAAiB,WACbL,EAAKxI,MAAMwH,WAAWgB,EAAKxI,MAAMmC,QAASqG,EAAKxF,MAAM2F,UAErDH,EAAK/E,SAAS,CAAEiF,UAAU,KApB1BF,EAAKxF,MAAM,CACP0F,UAAU,EACVC,SAAUH,EAAKxI,MAAMmC,QAAQ8E,MALlBuB,wEA0BV,IAAAM,EAC0C5H,KAAKlB,MAA5CiD,EADH6F,EACG7F,SAAUd,EADb2G,EACa3G,QAASmF,EADtBwB,EACsBxB,gBADtBlB,EAE0BlF,KAAK8B,MAA5B0F,EAFHtC,EAEGsC,SAAUC,EAFbvC,EAEauC,SAElB,OACI1I,EAAAC,EAAAC,cAAA,UACKuI,EACGzI,EAAAC,EAAAC,cAAA,SAAOmE,KAAK,OAAOjB,MAAOsF,EAAU3C,SAAU9E,KAAK0H,mBAEnD3I,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,cAASgC,EAAQgF,QADrB,IACuChF,EAAQ8E,KAC1C9E,EAAQiF,MAAQnH,EAAAC,EAAAC,cAAA,0BAN7B,IAUK8C,EAASnB,MAAQK,EAAQgF,QACtBlH,EAAAC,EAAAC,cAAA,YACKuI,EACGzI,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,UAAQoE,QAASrD,KAAK2H,gBAAtB,WACA5I,EAAAC,EAAAC,cAAA,UAAQoE,QAASrD,KAAKuH,kBAAtB,YAGJxI,EAAAC,EAAAC,cAAA,UAAQoE,QAASrD,KAAKuH,kBAAtB,WAGFC,GACEzI,EAAAC,EAAAC,cAAA,UAAQmE,KAAK,SAASC,QAAS,kBAAM+C,EAAgBnF,EAAQL,OAA7D,qBAtDF/B,aAgEpBgJ,EAAWjJ,EAAaiH,GAExBiC,EAAc,SAAA3E,GAAA,IAAGpB,EAAHoB,EAAGpB,SAAUb,EAAbiC,EAAajC,SAAUkF,EAAvBjD,EAAuBiD,gBAAiBE,EAAxCnD,EAAwCmD,WAAxC,OAChBvH,EAAAC,EAAAC,cAAA,UACKiC,EAAS8F,IAAI,SAAA/F,GAAO,OACjBlC,EAAAC,EAAAC,cAAC8I,EAAD,CACIhG,SAAUA,EACVG,IAAKjB,EAAQL,IACbK,QAASA,EACTmF,gBAAiBA,EACjBE,WAAYA,QAQbrD,cAAQP,EAFL,SAAAX,GAAQ,QAAMA,IAEjBkB,CA3LE,kBACblE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCAGAF,EAAAC,EAAAC,cAAC4I,EAAD,SCHOG,EANC,kBACZjJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBCDFgJ,cACF,SAAAA,EAAYnJ,GAAO,IAAAiB,EAAA,OAAAX,OAAAa,EAAA,EAAAb,CAAAY,KAAAiI,IACflI,EAAAX,OAAAuC,EAAA,EAAAvC,CAAAY,KAAAZ,OAAAwC,EAAA,EAAAxC,CAAA6I,GAAApG,KAAA7B,KAAMlB,KAEDgD,MAAQ,CACT2E,SAAS,EACTzF,MAAO,IALIjB,mFASC,IAAAqC,EAAApC,KAChBA,KAAKuC,SAAS,CAAEkE,SAAQ,IAExBzG,KAAKlB,MAAMK,SAAS6B,QAAQ0F,GAAG,QAAS,SAAAC,GACpC,IAAMuB,EAAcvB,EAASE,MAEvBsB,EAAY/I,OAAO2H,KAAKmB,GAAalB,IAAI,SAAA9E,GAAG,OAAA9C,OAAAuF,EAAA,EAAAvF,CAAA,GAC3C8I,EAAYhG,GAD+B,CAE9CtB,IAAIsB,MAGRE,EAAKG,SAAS,CACVvB,MAAOmH,EACP1B,SAAS,qDAMjBzG,KAAKlB,MAAMK,SAAS6B,QAAQkG,uCAGvB,IAAA1C,EACsBxE,KAAK8B,MAAxBd,EADHwD,EACGxD,MAAOyF,EADVjC,EACUiC,QAEf,OACI1H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACCwH,GAAW1H,EAAAC,EAAAC,cAAA,0BACZF,EAAAC,EAAAC,cAACmJ,EAAD,CAAUpH,MAAOA,YAvCTnC,aA6ClBwJ,EAAW,SAAAlF,GAAA,IAAGnC,EAAHmC,EAAGnC,MAAH,OACbjC,EAAAC,EAAAC,cAAA,UACK+B,EAAMgG,IAAI,SAAArG,GAAI,OACX5B,EAAAC,EAAAC,cAAA,MAAIiD,IAAKvB,EAAKC,KACV7B,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,sBADJ,IAC2B0B,EAAKC,KAEhC7B,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,yCADJ,IAC2C0B,EAAKR,OAEhDpB,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,2BADJ,IACgC0B,EAAKsD,eAOtCrF,IAAaqJ,GCrCbzG,IAhBH,kBACRzC,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACIxE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqJ,EAAD,MACAvJ,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KfnBF,IemBwBC,UAAWC,IAC9C5J,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOE,KfnBI,YemBkBC,UAAWlD,IACxCzG,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOE,KfnBI,WemBkBC,UAAW/C,IACxC5G,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOE,KAAMhF,EAAaiF,UAAWE,IACrC7J,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOE,KfnBI,UemBkBC,UAAWG,IACxC9J,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOE,KfnBE,SemBkBC,UAAWT,QCZ9Ba,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACLrK,EAAAC,EAAAC,cAACoK,EAAgB5G,SAAjB,CAA0BN,MAAO,IAAIrC,GACjCf,EAAAC,EAAAC,cAACqK,EAAD,OAEJC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlF,KAAK,SAAAmF,GACjCA,EAAaC","file":"static/js/main.05d5c8b6.chunk.js","sourcesContent":["export const LANDING = '/';\nexport const SIGN_UP = '/registro';\nexport const SIGN_IN = '/iniciar';\nexport const HOME = '/publicaciones';\nexport const ACCOUNT = '/cuenta';\nexport const ADMIN = '/admin';","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        this.db = app.database();\n\n        this.serverValue = app.database.ServerValue;\n    }\n\n    //Auth API\n    doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    /*doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n        url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });*/\n\n    //User API\n    user = uid => this.db.ref(`users/${uid}`);\n    users = () => this.db.ref('users');\n\n    //Post API\n    message = uid => this.db.ref(`messages/${uid}`);\n    messages = () => this.db.ref('messages');\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                authUser: null,\n            };\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser\n                    ? this.setState({ authUser })\n                    : this.setState({ authUser:null });\n                },\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    <Component {...this.props} />\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n                if (!condition(authUser)) {\n                    this.props.history.push(ROUTES.SIGN_IN);\n                }\n            });\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render () {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component {...this.props} /> : null\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n    <button type=\"button\" onClick={firebase.doSignOut}>Cerrar sesión</button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOutButton from '../SignOut';\nimport { AuthUserContext } from '../Session';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = () => (\n    <div>\n        <AuthUserContext.Consumer>\n            {authUser =>\n                authUser ? <NavigationAuth /> : <NavigationNonAuth />\n            }\n        </AuthUserContext.Consumer>\n    </div>\n);\n\nconst NavigationAuth = () => (\n        <ul>\n            <li><Link to={ROUTES.LANDING}>Landing</Link></li>\n            <li><Link to={ROUTES.HOME}>Muro</Link></li>\n            <li><Link to={ROUTES.ADMIN}>Cuenta</Link></li>\n            <li><SignOutButton /></li>\n        </ul>\n);\n\nconst NavigationNonAuth = () => (\n    <ul>\n        <li><Link to={ROUTES.LANDING}>Landing</Link></li>\n        <li><Link to={ROUTES.SIGN_IN}>Iniciar sesión</Link></li>\n    </ul>\n);\n\nexport default Navigation;","import React from 'react';\n//import { SignUpForm } from '../SignUp';\n\nconst Landing = () => (\n    <div>\n        <h1>Landing</h1>\n        {/*<SignUpForm />*/}\n    </div>\n);\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n    <div>\n        <h1>Registro de usuarios</h1>\n        <SignUpForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne } = this.state;\n\n        this.props.firebase\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\n        .then(authUser => {\n            return this.props.firebase\n            .user(authUser.user.uid)\n            .set({\n                username,\n                email,\n            });\n        })\n        .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n        })\n        .catch(error => {\n            this.setState({ error });\n        });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const {\n            username, email, passwordOne, passwordTwo, error,\n        } = this.state;\n\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n\n        return(\n            <form onSubmit={this.onSubmit}>\n                <input name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Nombre completo\"></input>\n                <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\"></input>\n                <input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\"></input>\n                <input name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Confirmar contraseña\"></input>\n                <button disabled={isInvalid} type=\"submit\">Registrarse</button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignUpLink = () => (\n    <p>¿No tienes cuenta? <Link to={ROUTES.SIGN_UP}>Aquí puedes crearla</Link></p>\n);\n\nconst SignUpForm = compose (\n    withRouter,\n    withFirebase,\n    )(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n    <div>\n        <h1>Inicio de sesión</h1>\n        <SignInForm />\n        <SignUpLink />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input name=\"email\" value= {email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\"></input>\n                <input name=\"password\" value= {password} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\"></input>\n                <button disabled={isInvalid} type=\"submit\" >Iniciar sesión</button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nconst HomePage = () => (\n    <div>\n        <h1>Muro de publicaciones</h1>\n        {/*<p>Esta página es accesible para todos los usuarios con cuenta de sesión iniciada.</p>*/}\n\n        <Messages />\n    </div>\n);\n\nclass MessagesBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: '',\n            loading: false,\n            messages: [],\n        };\n    }\n\n    onChangeText = event => {\n        this.setState({ text: event.target.value });\n    };\n\n    onCreateMessage = (event, authUser) => {\n        this.props.firebase.messages().push({\n            text: this.state.text,\n            userId: authUser.uid,\n            time: this.props.firebase.serverValue.TIMESTAMP,\n        });\n\n        this.setState({ text: '' });\n\n        event.preventDefault();\n    };\n\n    onRemoveMessage = uid => {\n        this.props.firebase.message(uid).remove();\n    };\n\n    onEditPost = (message, text) => {\n        const { uid, ...messageSnapshot } = message;\n\n        this.props.firebase.message(message.uid).set({\n            ...messageSnapshot,\n            text,\n            time: this.props.firebase.serverValue.TIMESTAMP,\n        });\n    };\n\n    componentDidMount() {\n        this.setState({ loading: true });\n\n        this.props.firebase.messages().on('value', snapshot => {\n            const messageObject = snapshot.val();\n\n            if (messageObject) {\n                const messageList = Object.keys(messageObject).map(key => ({\n                    ...messageObject[key],\n                    uid: key,\n                }));\n                this.setState({\n                    messages: messageList,\n                    loadinf: false,\n                });\n            } else {\n                this.setState({ messages: null, loading:false });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.messages().off();\n    }\n\n    render() {\n        const { text, messages, loading } = this.state;\n\n        return (\n            <AuthUserContext.Consumer>\n                {authUser => (\n                    <div>\n                        {loading && <div>Loading ...</div>}\n                        {messages ? (\n                            <MessageList\n                            authUser={authUser}\n                                messages={messages}\n                                onRemoveMessage={this.onRemoveMessage}\n                                onEditPost={this.onEditPost}\n                                />\n                        ) : (\n                            <div>Aún no hay publicaciones ...</div>\n                        )}\n\n                        <form onSubmit={event => this.onCreateMessage(event, authUser)}>\n                            <input type=\"text\" value={text} onChange={this.onChangeText}></input>\n                            <button type=\"submit\">Publicar</button>\n                        </form>\n                    </div>\n                )}\n            </AuthUserContext.Consumer>\n        );\n    }\n}\n\nclass MessageItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state={\n            editMode: false,\n            editText: this.props.message.text,\n        };\n    }\n\n    onToggleEditMode = () => {\n        this.setState(state => ({\n            editMode: !state.editMode,\n            editText: this.props.message.text,\n        }));\n    };\n\n    onChangeEditText = event => {\n        this.setState({ editText: event.target.value });\n    };\n\n    onSaveEditText = () => {\n        this.props.onEditPost(this.props.message, this.state.editText);\n\n        this.setState({ editMode: false });\n    };\n\n    render() {\n        const { authUser, message, onRemoveMessage } = this.props;\n        const { editMode, editText } = this.state;\n\n        return(\n            <li>\n                {editMode ? (\n                    <input type=\"text\" value={editText} onChange={this.onChangeEditText}></input>\n                ) : (\n                    <span>\n                        <strong>{message.userId}</strong> {message.text}\n                        {message.time && <span>(Editado)</span>}\n                    </span>\n                )};\n\n                {authUser.uid === message.userId && (\n                    <span>\n                        {editMode ? (\n                            <span>\n                                <button onClick={this.onSaveEditText}>Guardar</button>\n                                <button onClick={this.onToggleEditMode}>Limpiar</button>\n                            </span>\n                        ) : (\n                            <button onClick={this.onToggleEditMode}>Editar</button>\n                        )}\n\n                        {!editMode && (\n                            <button type=\"button\" onClick={() => onRemoveMessage(message.uid)}>Eliminar</button>\n                        )}\n                    </span>\n                )}\n            </li>\n        );\n    }\n}\n\n\nconst Messages = withFirebase(MessagesBase);\n\nconst MessageList = ({ authUser, messages, onRemoveMessage, onEditPost }) => (\n    <ul>\n        {messages.map(message => (\n            <MessageItem\n                authUser={authUser}\n                key={message.uid}\n                message={message}\n                onRemoveMessage={onRemoveMessage}\n                onEditPost={onEditPost}\n            />\n        ))}\n    </ul>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(withAuthorization(condition))(HomePage);","import React from 'react';\n\nconst Account = () => (\n    <div>\n        <h1>Account</h1>\n    </div>\n);\n\nexport default Account;","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            users: [],\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ loading:true });\n\n        this.props.firebase.users().on('value', snapshot => {\n            const usersObject = snapshot.val();\n\n            const usersList = Object.keys(usersObject).map(key => ({\n                ...usersObject[key],\n                uid:key,\n            }));\n\n            this.setState({\n                users: usersList,\n                loading: false,\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n\n    render() {\n        const { users, loading } = this.state;\n\n        return(\n            <div>\n                <h1>Admin</h1>\n                {loading && <div>Loading ...</div>}\n                <UserList users={users} />\n            </div>\n        );\n    }\n}\n\nconst UserList = ({ users }) => (\n    <ul>\n        {users.map(user => (\n            <li key={user.uid}>\n                <span>\n                    <strong>ID: </strong> {user.uid}\n                </span>\n                <span>\n                    <strong>Correo electrónico: </strong> {user.email}\n                </span>\n                <span>\n                    <strong>Usuario: </strong> {user.username}\n                </span>\n            </li>\n        ))}\n    </ul>\n)\n\nexport default withFirebase(AdminPage);","import React from 'react';\nimport { HashRouter as Router, Route, } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nconst App = () => (\n    <Router>\n        <div>\n            <Navigation />\n            <hr />\n\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n            <Route path={ROUTES.HOME} component={HomePage} />\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n            <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </div>\n    </Router>\n);\n\nexport default withAuthentication(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n    );\n\nserviceWorker.unregister();"],"sourceRoot":""}