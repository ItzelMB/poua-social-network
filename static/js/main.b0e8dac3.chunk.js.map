{"version":3,"sources":["constants/routes.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/SignIn/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["HOME","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","user","uid","db","ref","concat","users","app","initializeApp","database","_ref","type","onClick","NavigationAuth","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","authUser","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","possibleConstructorReturn","getPrototypeOf","call","onSubmit","event","_this$state","state","then","set","setState","objectSpread","history","push","catch","preventDefault","onChange","defineProperty","target","name","value","_this$state2","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","compose","withRouter","SignUpPage","SignInFormBase","SignInForm","SignInPage","SignUp_SignUpLink","Home","Account","Admin","App","_this2","onAuthStateChanged","listener","components_Navigation","react_router","exact","path","component","LandingPage","HomePage","AccountPage","AdminPage","Boolean","window","location","hostname","match","ReactDOM","render","context","Provider","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0e8dac3.chunk.js","sourcesContent":["export const LANDING = '/';\r\nexport const SIGN_UP = '/registro';\r\nexport const SIGN_IN = '/iniciar';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/cuenta';\r\nexport const ADMIN = '/admin';","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        this.db = app.database();\n    }\n\n    //Auth API\n    doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    //User API\n    user = uid => this.db.ref(`users/${uid}`);\n    users = () => this.db.ref('users');\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\nexport { FirebaseContext, withFirebase };","import React from 'react';\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n    <button type=\"button\" onClick={firebase.doSignOut}>Cerrar sesión</button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOutButton from '../SignOut';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = ({ authUser }) => (\n    <div>{authUser ? <NavigationAuth /> : <NavigationNonAuth />}</div>\n);\n\nconst NavigationAuth = () => (\n        <ul>\n            <li><Link to={ROUTES.LANDING}>Landing</Link></li>\n            <li><Link to={ROUTES.HOME}>Muro</Link></li>\n            <li><Link to={ROUTES.ACCOUNT}>Cuenta</Link></li>\n            <li><SignOutButton /></li>\n        </ul>\n);\n\nconst NavigationNonAuth = () => (\n    <ul>\n        <li><Link to={ROUTES.LANDING}>Landing</Link></li>\n        <li><Link to={ROUTES.SIGN_IN}>Iniciar sesión</Link></li>\n    </ul>\n);\n\nexport default Navigation;","import React from 'react';\n//import { SignUpForm } from '../SignUp';\n\nconst Landing = () => (\n    <div>\n        <h1>Landing</h1>\n        {/*<SignUpForm />*/}\n    </div>\n);\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n    <div>\n        <h1>Registro de usuarios</h1>\n        <SignUpForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne } = this.state;\n\n        this.props.firebase\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\n        .then(authUser => {\n            return this.props.firebase\n            .user(authUser.user.uid)\n            .set({\n                username,\n                email,\n            });\n        })\n        .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n        })\n        .catch(error => {\n            this.setState({ error });\n        });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const {\n            username, email, passwordOne, passwordTwo, error,\n        } = this.state;\n\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n\n        return(\n            <form onSubmit={this.onSubmit}>\n                <input name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Nombre completo\"></input>\n                <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\"></input>\n                <input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\"></input>\n                <input name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Confirmar contraseña\"></input>\n                <button disabled={isInvalid} type=\"submit\">Registrarse</button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignUpLink = () => (\n    <p>¿No tienes cuenta? <Link to={ROUTES.SIGN_UP}>Aquí puedes crearla</Link></p>\n);\n\nconst SignUpForm = compose (\n    withRouter,\n    withFirebase,\n    )(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n    <div>\n        <h1>Inicio de sesión</h1>\n        <SignInForm />\n        <SignUpLink />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input name=\"email\" value= {email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\"></input>\n                <input name=\"password\" value= {password} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\"></input>\n                <button disabled={isInvalid} type=\"submit\" >Iniciar sesión</button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React from 'react';\r\n\r\nconst Home = () => (\r\n    <div>\r\n        <h1>Home</h1>\r\n    </div>\r\n);\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Account = () => (\r\n    <div>\r\n        <h1>Account</h1>\r\n    </div>\r\n);\r\n\r\nexport default Account;","import React from 'react';\r\n\r\nconst Admin = () => (\r\n    <div>\r\n        <h1>Admin</h1>\r\n    </div>\r\n);\r\n\r\nexport default Admin;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { withFirebase } from '../Firebase';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authUser: null,\n        };\n    }\n\n    componentDidMount() {\n        this.props.firebase.auth.onAuthStateChanged(authUser => {\n            authUser ? this.setState({ authUser }) : this.setState({ authUser: null });\n        });\n    }\n\n    componentWillUnmount() {\n        this.listener();\n    }\n\n    render() {\n        return (\n            <Router>\n                <div>\n                    <Navigation authUser={this.state.authUser} />\n                    <hr />\n\n                    <Route exact path={ROUTES.LANDING} component={LandingPage} />\n                    <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n                    <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n                    <Route path={ROUTES.HOME} component={HomePage} />\n                    <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n                    <Route path={ROUTES.ADMIN} component={AdminPage} />\n                </div>\n            </Router>\n        )\n    }\n}\n\n\nexport default withFirebase(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n    );\n\nserviceWorker.unregister();"],"sourceRoot":""}