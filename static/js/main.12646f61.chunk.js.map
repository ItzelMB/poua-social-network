{"version":3,"sources":["constants/routes.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/SignIn/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["HOME","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","user","uid","db","ref","concat","users","message","messages","app","initializeApp","database","serverValue","ServerValue","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","_ref","type","onClick","NavigationAuth","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","set","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","placeholder","disabled","SignUpLink","SignUpForm","SignUpPage","SignInFormBase","SignInForm","SignInPage","SignUp_SignUpLink","MessagesBase","onChangeText","text","onCreateMessage","userName","refThis","assertThisInitialized","child","once","dataSnapshot","val","console","log","userId","time","TIMESTAMP","persist","onRemoveMessage","remove","onEditPost","messageSnapshot","objectWithoutProperties","editTime","loading","on","snapshot","messageObject","messageList","keys","map","loadinf","off","_this3","Home_MessageList","MessageItem","_this4","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","_this$props","Messages","MessageList","Home_MessageItem","Account","AdminPage","usersObject","usersList","Admin_UserList","UserList","components_Navigation","react_router","exact","path","component","LandingPage","HomePage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12646f61.chunk.js","sourcesContent":["export const LANDING = '/';\r\nexport const SIGN_UP = '/registro';\r\nexport const SIGN_IN = '/iniciar';\r\nexport const HOME = '/publicaciones';\r\nexport const ACCOUNT = '/cuenta';\r\nexport const ADMIN = '/admin';","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n)\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n\r\n        this.auth = app.auth();\r\n        this.db = app.database();\r\n\r\n        this.serverValue = app.database.ServerValue;\r\n    }\r\n\r\n    //Auth API\r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    /*doSendEmailVerification = () =>\r\n    this.auth.currentUser.sendEmailVerification({\r\n        url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\r\n    });*/\r\n\r\n    //User API\r\n    user = uid => this.db.ref(`users/${uid}`);\r\n    users = () => this.db.ref('users');\r\n\r\n    //Post API\r\n    message = uid => this.db.ref(`messages/${uid}`);\r\n    messages = () => this.db.ref('messages');\r\n}\r\n\r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n    class WithAuthentication extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                authUser: null,\r\n            };\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n                authUser => {\r\n                    authUser\r\n                    ? this.setState({ authUser })\r\n                    : this.setState({ authUser:null });\r\n                },\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <AuthUserContext.Provider value={this.state.authUser}>\r\n                    <Component {...this.props} />\r\n                </AuthUserContext.Provider>\r\n            );\r\n        }\r\n    }\r\n\r\n    return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n    class WithAuthorization extends React.Component {\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n                if (!condition(authUser)) {\r\n                    this.props.history.push(ROUTES.SIGN_IN);\r\n                }\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <AuthUserContext.Consumer>\r\n                    {authUser =>\r\n                        condition(authUser) ? <Component {...this.props} /> : null\r\n                    }\r\n                </AuthUserContext.Consumer>\r\n            );\r\n        }\r\n    }\r\n\r\n    return compose(\r\n        withRouter,\r\n        withFirebase,\r\n    )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n    <button type=\"button\" onClick={firebase.doSignOut}>Cerrar sesión</button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignOutButton from '../SignOut';\r\nimport { AuthUserContext } from '../Session';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst Navigation = () => (\r\n    <div>\r\n        <AuthUserContext.Consumer>\r\n            {authUser =>\r\n                authUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n            }\r\n        </AuthUserContext.Consumer>\r\n    </div>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n        <ul>\r\n            {/*<li><Link to={ROUTES.LANDING}>Landing</Link></li>*/}\r\n            <li><Link to={ROUTES.HOME}>Muro</Link></li>\r\n            {/*<li><Link to={ROUTES.ADMIN}>Cuenta</Link></li>*/}\r\n            <li><SignOutButton /></li>\r\n        </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n    <ul>\r\n        {/*<li><Link to={ROUTES.LANDING}>Landing</Link></li>*/}\r\n        <li><Link to={ROUTES.SIGN_IN}>Iniciar sesión</Link></li>\r\n    </ul>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\n//import { SignUpForm } from '../SignUp';\r\n\r\nconst Landing = () => (\r\n    <div>\r\n        <h1>Landing</h1>\r\n        {/*<SignUpForm />*/}\r\n    </div>\r\n);\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignUpPage = () => (\r\n    <div>\r\n        <h1>Registro de usuarios</h1>\r\n        <SignUpForm />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { username, email, passwordOne } = this.state;\r\n\r\n        this.props.firebase\r\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n        .then(authUser => {\r\n            return this.props.firebase\r\n            .user(authUser.user.uid)\r\n            .set({\r\n                username,\r\n                email,\r\n            });\r\n        })\r\n        .then(() => {\r\n            this.setState({ ...INITIAL_STATE });\r\n            this.props.history.push(ROUTES.HOME);\r\n        })\r\n        .catch(error => {\r\n            this.setState({ error });\r\n        });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            username, email, passwordOne, passwordTwo, error,\r\n        } = this.state;\r\n\r\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\r\n\r\n        return(\r\n            <form onSubmit={this.onSubmit}>\r\n                <input name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Nombre completo\"></input>\r\n                <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\"></input>\r\n                <input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\"></input>\r\n                <input name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Confirmar contraseña\"></input>\r\n                <button disabled={isInvalid} type=\"submit\">Registrarse</button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n    <p>¿No tienes cuenta? <Link to={ROUTES.SIGN_UP}>Aquí puedes crearla</Link></p>\r\n);\r\n\r\nconst SignUpForm = compose (\r\n    withRouter,\r\n    withFirebase,\r\n    )(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignInPage = () => (\r\n    <div>\r\n        <h1>Inicio de sesión</h1>\r\n        <SignInForm />\r\n        <SignUpLink />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { email, password } = this.state;\r\n\r\n        this.props.firebase\r\n            .doSignInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            });\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value })\r\n    };\r\n\r\n    render() {\r\n        const { email, password, error } = this.state;\r\n\r\n        const isInvalid = password === '' || email === '';\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input name=\"email\" value= {email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\"></input>\r\n                <input name=\"password\" value= {password} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\"></input>\r\n                <button disabled={isInvalid} type=\"submit\" >Iniciar sesión</button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignInForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };","import React, { Component } from 'react';\r\nimport { compose } from 'recompose';\r\n\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst HomePage = () => (\r\n    <div>\r\n        <h1>Muro de publicaciones</h1>\r\n        {/*<p>Esta página es accesible para todos los usuarios con cuenta de sesión iniciada.</p>*/}\r\n\r\n        <Messages />\r\n    </div>\r\n);\r\n\r\nclass MessagesBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: '',\r\n            loading: false,\r\n            messages: [],\r\n        };\r\n    }\r\n\r\n    onChangeText = event => {\r\n        this.setState({ text: event.target.value });\r\n    };\r\n\r\n    onCreateMessage = (event, authUser) => {\r\n        let userName;\r\n        const refThis = this;\r\n\r\n        this.props.firebase.users().child(authUser.uid).child('username').once('value')\r\n        .then(function(dataSnapshot) {\r\n            userName = dataSnapshot.val();\r\n            console.log(userName);\r\n        })\r\n        .then(function(){\r\n            console.log('hola' + userName);\r\n            refThis.props.firebase.messages().push({\r\n                text: refThis.state.text,\r\n                userId: authUser.uid,\r\n                username: userName,\r\n                time: refThis.props.firebase.serverValue.TIMESTAMP,\r\n            });\r\n\r\n            refThis.setState({ text: '' });\r\n\r\n            event.persist();\r\n        });\r\n\r\n    };\r\n\r\n    onRemoveMessage = uid => {\r\n        this.props.firebase.message(uid).remove();\r\n    };\r\n\r\n    onEditPost = (message, text) => {\r\n        const { uid, ...messageSnapshot } = message;\r\n\r\n        this.props.firebase.message(message.uid).set({\r\n            ...messageSnapshot,\r\n            text,\r\n            editTime: this.props.firebase.serverValue.TIMESTAMP,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n\r\n        this.props.firebase.messages().on('value', snapshot => {\r\n            const messageObject = snapshot.val();\r\n\r\n            if (messageObject) {\r\n                const messageList = Object.keys(messageObject).map(key => ({\r\n                    ...messageObject[key],\r\n                    uid: key,\r\n                }));\r\n                this.setState({\r\n                    messages: messageList,\r\n                    loadinf: false,\r\n                });\r\n            } else {\r\n                this.setState({ messages: null, loading:false });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.firebase.messages().off();\r\n    }\r\n\r\n    render() {\r\n        const { text, messages, loading } = this.state;\r\n\r\n        return (\r\n            <AuthUserContext.Consumer>\r\n                {authUser => (\r\n                    <div>\r\n                        {loading && <div>Loading ...</div>}\r\n                        {messages ? (\r\n                            <MessageList\r\n                                authUser={authUser}\r\n                                messages={messages}\r\n                                onRemoveMessage={this.onRemoveMessage}\r\n                                onEditPost={this.onEditPost}\r\n                                />\r\n                        ) : (\r\n                            <div>Aún no hay publicaciones ...</div>\r\n                        )}\r\n\r\n                        <form onSubmit={event => this.onCreateMessage(event, authUser)}>\r\n                            <input type=\"text\" value={text} onChange={this.onChangeText}></input>\r\n                            <button type=\"submit\">Publicar</button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </AuthUserContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nclass MessageItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            editMode: false,\r\n            editText: this.props.message.text,\r\n        };\r\n    }\r\n\r\n    onToggleEditMode = () => {\r\n        this.setState(state => ({\r\n            editMode: !state.editMode,\r\n            editText: this.props.message.text,\r\n        }));\r\n    };\r\n\r\n    onChangeEditText = event => {\r\n        this.setState({ editText: event.target.value });\r\n    };\r\n\r\n    onSaveEditText = () => {\r\n        this.props.onEditPost(this.props.message, this.state.editText);\r\n\r\n        this.setState({ editMode: false });\r\n    };\r\n\r\n    render() {\r\n        const { authUser, message, onRemoveMessage } = this.props;\r\n        const { editMode, editText } = this.state;\r\n\r\n        return(\r\n            <li>\r\n                {editMode ? (\r\n                    <input type=\"text\" value={editText} onChange={this.onChangeEditText}></input>\r\n                ) : (\r\n                    <span>\r\n                        <strong>{message.username}</strong> {message.text}\r\n                        {message.editTime && <span>(Editado)</span>}\r\n                    </span>\r\n                )};\r\n\r\n                {authUser.uid === message.userId && (\r\n                    <span>\r\n                        {editMode ? (\r\n                            <span>\r\n                                <button onClick={this.onSaveEditText}>Guardar</button>\r\n                                <button onClick={this.onToggleEditMode}>Cancelar</button>\r\n                            </span>\r\n                        ) : (\r\n                            <button onClick={this.onToggleEditMode}>Editar</button>\r\n                        )}\r\n\r\n                        {!editMode && (\r\n                            <button type=\"button\" onClick={() => onRemoveMessage(message.uid)}>Eliminar</button>\r\n                        )}\r\n                    </span>\r\n                )}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst Messages = withFirebase(MessagesBase);\r\n\r\nconst MessageList = ({ authUser, messages, onRemoveMessage, onEditPost }) => (\r\n    <ul>\r\n        {messages.map(message => (\r\n            <MessageItem\r\n                authUser={authUser}\r\n                key={message.uid}\r\n                message={message}\r\n                onRemoveMessage={onRemoveMessage}\r\n                onEditPost={onEditPost}\r\n            />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default compose(withAuthorization(condition))(HomePage);","import React from 'react';\r\n\r\nconst Account = () => (\r\n    <div>\r\n        <h1>Account</h1>\r\n    </div>\r\n);\r\n\r\nexport default Account;","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nclass AdminPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: false,\r\n            users: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading:true });\r\n\r\n        this.props.firebase.users().on('value', snapshot => {\r\n            const usersObject = snapshot.val();\r\n\r\n            const usersList = Object.keys(usersObject).map(key => ({\r\n                ...usersObject[key],\r\n                uid:key,\r\n            }));\r\n\r\n            this.setState({\r\n                users: usersList,\r\n                loading: false,\r\n            });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.firebase.users().off();\r\n    }\r\n\r\n    render() {\r\n        const { users, loading } = this.state;\r\n\r\n        return(\r\n            <div>\r\n                <h1>Admin</h1>\r\n                {loading && <div>Loading ...</div>}\r\n                <UserList users={users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst UserList = ({ users }) => (\r\n    <ul>\r\n        {users.map(user => (\r\n            <li key={user.uid}>\r\n                <span>\r\n                    <strong>ID: </strong> {user.uid}\r\n                </span>\r\n                <span>\r\n                    <strong>Correo electrónico: </strong> {user.email}\r\n                </span>\r\n                <span>\r\n                    <strong>Usuario: </strong> {user.username}\r\n                </span>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nexport default withFirebase(AdminPage);","import React from 'react';\r\nimport { HashRouter as Router, Route, } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\n\r\nconst App = () => (\r\n    <Router>\r\n        <div>\r\n            <Navigation />\r\n            <hr />\r\n\r\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n            <Route path={ROUTES.HOME} component={HomePage} />\r\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n            <Route path={ROUTES.ADMIN} component={AdminPage} />\r\n        </div>\r\n    </Router>\r\n);\r\n\r\nexport default withAuthentication(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport Firebase, { FirebaseContext } from './components/Firebase';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n        <App />\r\n    </FirebaseContext.Provider>,\r\n    document.getElementById('root'),\r\n    );\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}