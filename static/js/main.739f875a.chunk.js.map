{"version":3,"sources":["constants/routes.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/SignIn/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["HOME","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","app","initializeApp","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","_ref","type","onClick","NavigationAuth","react_router_dom","to","ROUTES","SignOut","NavigationNonAuth","Navigation","Navigation_NavigationAuth","Navigation_NavigationNonAuth","Landing","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","SignInFormBase","SignInForm","SignInPage","SignUp_SignUpLink","Account","Admin","components_Navigation","react_router","exact","path","component","LandingPage","HomePage","AccountPage","AdminPage","Boolean","window","location","hostname","match","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.739f875a.chunk.js","sourcesContent":["export const LANDING = '/';\nexport const SIGN_UP = '/registro';\nexport const SIGN_IN = '/iniciar';\nexport const HOME = '/home';\nexport const ACCOUNT = '/cuenta';\nexport const ADMIN = '/admin';","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        //this.db = app.database();\n    }\n\n    //Auth API\n    doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    //User API\n    //user = uid => this.db.ref(`users/${uid}`);\n   // users = () => this.db.ref('users');\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                authUser: null,\n            };\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser\n                    ? this.setState({ authUser })\n                    : this.setState({ authUser:null });\n                },\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    <Component {...this.props} />\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n                if (!condition(authUser)) {\n                    this.props.history.push(ROUTES.SIGN_IN);\n                }\n            });\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render () {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component {...this.props} /> : null\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\nimport { withFirebase } from '../Firebase';\n\nconst SignOutButton = ({ firebase }) => (\n    <button type=\"button\" onClick={firebase.doSignOut}>Cerrar sesión</button>\n);\n\nexport default withFirebase(SignOutButton);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOutButton from '../SignOut';\nimport { AuthUserContext } from '../Session';\nimport * as ROUTES from '../../constants/routes';\n\nconst Navigation = () => (\n    <div>\n        <AuthUserContext.Consumer>\n            {authUser =>\n                authUser ? <NavigationAuth /> : <NavigationNonAuth />\n            }\n        </AuthUserContext.Consumer>\n    </div>\n);\n\nconst NavigationAuth = () => (\n        <ul>\n            <li><Link to={ROUTES.LANDING}>Landing</Link></li>\n            <li><Link to={ROUTES.HOME}>Muro</Link></li>\n            <li><Link to={ROUTES.ACCOUNT}>Cuenta</Link></li>\n            <li><SignOutButton /></li>\n        </ul>\n);\n\nconst NavigationNonAuth = () => (\n    <ul>\n        <li><Link to={ROUTES.LANDING}>Landing</Link></li>\n        <li><Link to={ROUTES.SIGN_IN}>Iniciar sesión</Link></li>\n    </ul>\n);\n\nexport default Navigation;","import React from 'react';\n//import { SignUpForm } from '../SignUp';\n\nconst Landing = () => (\n    <div>\n        <h1>Landing</h1>\n        {/*<SignUpForm />*/}\n    </div>\n);\n\nexport default Landing;","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignUpPage = () => (\n    <div>\n        <h1>Registro de usuarios</h1>\n        <SignUpForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne } = this.state;\n\n        this.props.firebase\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\n        /*.then(authUser => {\n            return this.props.firebase\n            .user(authUser.user.uid)\n            .set({\n                username,\n                email,\n            });\n        })*/\n        .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n        })\n        .catch(error => {\n            this.setState({ error });\n        });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const {\n            username, email, passwordOne, passwordTwo, error,\n        } = this.state;\n\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n\n        return(\n            <form onSubmit={this.onSubmit}>\n                <input name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Nombre completo\"></input>\n                <input name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\"></input>\n                <input name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\"></input>\n                <input name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Confirmar contraseña\"></input>\n                <button disabled={isInvalid} type=\"submit\">Registrarse</button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignUpLink = () => (\n    <p>¿No tienes cuenta? <Link to={ROUTES.SIGN_UP}>Aquí puedes crearla</Link></p>\n);\n\nconst SignUpForm = compose (\n    withRouter,\n    withFirebase,\n    )(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst SignInPage = () => (\n    <div>\n        <h1>Inicio de sesión</h1>\n        <SignInForm />\n        <SignUpLink />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input name=\"email\" value= {email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\"></input>\n                <input name=\"password\" value= {password} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\"></input>\n                <button disabled={isInvalid} type=\"submit\" >Iniciar sesión</button>\n\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };","import React from 'react';\nimport { withAuthorization } from '../Session';\n\nconst HomePage = () => (\n    <div>\n        <h1>Muro de publicaciones</h1>\n        <p>Esta página es accesible para todos los usuarios con cuenta de sesión iniciada.</p>\n    </div>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);","import React from 'react';\n\nconst Account = () => (\n    <div>\n        <h1>Account</h1>\n    </div>\n);\n\nexport default Account;","import React from 'react';\n\nconst Admin = () => (\n    <div>\n        <h1>Admin</h1>\n    </div>\n);\n\nexport default Admin;","import React from 'react';\nimport { HashRouter as Router, Route, } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nconst App = () => (\n    <Router>\n        <div>\n            <Navigation />\n            <hr />\n\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n            <Route path={ROUTES.HOME} component={HomePage} />\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n            <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </div>\n    </Router>\n);\n\nexport default withAuthentication(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n    );\n\nserviceWorker.unregister();"],"sourceRoot":""}