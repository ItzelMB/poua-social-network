{"version":3,"sources":["constants/routes.js","components/Session/context.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/SignOut/index.js","components/Navigation/index.js","components/SignUp/index.js","components/SignIn/index.js","components/Landing/index.js","components/Footer/index.js","components/Likes/index.js","components/PhotoUpload/index.js","components/Home/index.js","components/Account/index.js","components/Admin/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["HOME","AuthUserContext","React","createContext","FirebaseContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","user","uid","db","ref","concat","users","post","posts","storageRef","url","storage","app","initializeApp","database","serverValue","ServerValue","withAuthentication","WithAuthentication","_React$Component","possibleConstructorReturn","getPrototypeOf","call","state","authUser","inherits","createClass","key","value","_this2","listener","onAuthStateChanged","setState","context","Provider","withAuthorization","condition","WithAuthorization","apply","arguments","history","push","compose","withRouter","_ref","Button","className","type","onClick","class","NavigationAuth","toggleNavbar","bind","assertThisInitialized","collapsed","Navbar","light","NavbarBrand","alt","src","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","NavLink","react_router_dom","to","ROUTES","SignOut","Navigation","Navigation_NavigationAuth","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","_this$state","then","set","objectSpread","catch","preventDefault","onChange","defineProperty","target","name","_this$state2","isInvalid","placeholder","autoComplete","color","disabled","message","SignUpLink","SignUpForm","SignUpPage","SignInFormBase","SignInForm","SignInPage","SignUp_SignUpLink","Landing","SignIn","Footer","Likes","handleLike","postCopy","likes","console","log","PhotoUpload","Fragment","uploadValue","for","id","onUpload","PostsBase","onChangeText","text","onCreatePosts","userName","refThis","photo","child","once","dataSnapshot","val","userId","time","TIMESTAMP","photoUrl","persist","onRemovePost","remove","onEditPost","postSnapshot","objectWithoutProperties","editTime","handlePhotoUpload","file","files","uploadFile","put","thisUpload","on","snapshot","percentage","bytesTransferred","totalBytes","getDownloadURL","loading","postObject","postsList","keys","map","reverse","off","_this3","noPublish","cols","rows","components_PhotoUpload","Home_PostList","PostItem","_this4","onToggleEditMode","editMode","editText","onChangeEditText","onSaveEditText","_this$props","components_Likes","Posts","PostList","Home_PostItem","components_Footer","Account","AdminPage","usersObject","usersList","Admin_UserList","UserList","components_Navigation","react_router","exact","path","component","LandingPage","HomePage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","render","Firebase_context","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7582ec1a.chunk.js","sourcesContent":["export const LANDING = '/';\nexport const SIGN_UP = '/registro';\nexport const SIGN_IN = '/iniciar';\nexport const HOME = '/publicaciones';\nexport const ACCOUNT = '/cuenta';\nexport const ADMIN = '/admin';","import React from 'react';\n\nconst AuthUserContext = React.createContext(null);\n\nexport default AuthUserContext;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n)\n\nexport default FirebaseContext;","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\n\nconst config = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n\n        this.auth = app.auth();\n        this.db = app.database();\n        this.storage = app.storage();\n\n        this.serverValue = app.database.ServerValue;\n    }\n\n    //Auth API\n    doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    /*doSendEmailVerification = () =>\n    this.auth.currentUser.sendEmailVerification({\n        url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n    });*/\n\n    //User API\n    user = uid => this.db.ref(`users/${uid}`);\n    users = () => this.db.ref('users');\n\n    //Post API\n    post = uid => this.db.ref(`posts/${uid}`);\n    posts = () => this.db.ref('posts');\n\n    //Storage API\n    storageRef = (url) => this.storage.ref(url);\n}\n\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\nexport { FirebaseContext, withFirebase };","import React from 'react';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\nconst withAuthentication = Component => {\n    class WithAuthentication extends React.Component {\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                authUser: null,\n            };\n        }\n\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\n                authUser => {\n                    authUser\n                    ? this.setState({ authUser })\n                    : this.setState({ authUser:null });\n                },\n            );\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render() {\n            return (\n                <AuthUserContext.Provider value={this.state.authUser}>\n                    <Component {...this.props} />\n                </AuthUserContext.Provider>\n            );\n        }\n    }\n\n    return withFirebase(WithAuthentication);\n};\n\nexport default withAuthentication;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthorization = condition => Component => {\n    class WithAuthorization extends React.Component {\n        componentDidMount() {\n            this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\n                if (!condition(authUser)) {\n                    this.props.history.push(ROUTES.SIGN_IN);\n                }\n            });\n        }\n\n        componentWillUnmount() {\n            this.listener();\n        }\n\n        render () {\n            return (\n                <AuthUserContext.Consumer>\n                    {authUser =>\n                        condition(authUser) ? <Component {...this.props} /> : null\n                    }\n                </AuthUserContext.Consumer>\n            );\n        }\n    }\n\n    return compose(\n        withRouter,\n        withFirebase,\n    )(WithAuthorization);\n};\n\nexport default withAuthorization;","import React from 'react';\nimport { withFirebase } from '../Firebase';\nimport { Button } from 'reactstrap';\n\nconst SignOutButton = ({ firebase }) => (\n    <Button className=\"btnSignOut\" type=\"button\" onClick={firebase.doSignOut}><i class=\"fas fa-sign-out-alt\"></i> CERRAR SESIÓN</Button>\n    //<button className=\"btnSignOut\" type=\"button\" onClick={firebase.doSignOut}>Cerrar sesión</button>\n);\n\nexport default withFirebase(SignOutButton);\n\nexport { Button };","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignOutButton from '../SignOut';\nimport { AuthUserContext } from '../Session';\nimport * as ROUTES from '../../constants/routes';\n\nimport './navigation.css';\n\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\n\nconst Navigation = () => (\n    <div>\n        <AuthUserContext.Consumer>\n            {authUser =>\n                authUser ? <NavigationAuth /> : null //<NavigationNonAuth />\n            }\n        </AuthUserContext.Consumer>\n    </div>\n);\n\n//const NavigationAuth = () => (\n//    <ul>\n//       {/*<li><Link to={ROUTES.LANDING}>Landing</Link></li>*/}\n//        <li><Link to={ROUTES.HOME}>Muro</Link></li>\n//       {/*<li><Link to={ROUTES.ADMIN}>Cuenta</Link></li>*/}\n//        <li><SignOutButton /></li>\n//    </ul>\n//);\n\n// const NavigationNonAuth = () => (\n//     <ul>\n//         {/*<li><Link to={ROUTES.LANDING}>Landing</Link></li>*/}\n//         <li><Link to={ROUTES.SIGN_IN}>Iniciar sesión</Link></li>\n//     </ul>\n// );\n\nclass NavigationAuth extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n        this.state = {\n            collapsed: true\n        };\n    }\n\n    toggleNavbar() {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar light>\n                    <NavbarBrand className=\"mr-auto\"><img className=\"img-logo\" alt=\"logo\" src=\"https://github.com/ItzelMB/GDL002-social-network/blob/master/public/src/imagenes/logo-poua-app.png?raw=true\"></img></NavbarBrand>\n                    <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n                    <Collapse isOpen={!this.state.collapsed} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                            <li></li>\n                                <NavLink><Link className=\"link-nav\" to={ROUTES.HOME}>IR A PUBLICACIONES</Link></NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink><SignOutButton /></NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n};\n\n/*\nclass NavigationNonAuth extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNavbar = this.toggleNavbar.bind(this);\n        this.state = {\n            collapsed: true\n        };\n    }\n\n    toggleNavbar() {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar color=\"danger\" light>\n                    <NavbarBrand className=\"mr-auto\"><img className=\"img-logo\" alt=\"logo\" src=\"https://github.com/ItzelMB/GDL002-social-network/blob/master/public/src/imagenes/logo-poua-app.png?raw=true\"></img></NavbarBrand>\n                    <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n                    <Collapse isOpen={!this.state.collapsed} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink><Link to={ROUTES.SIGN_IN}>Iniciar sesión</Link></NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n*/\n\nexport default Navigation;\n\nexport { NavigationAuth };\n//export { NavigationNonAuth };","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport './signUp.css';\nimport { Button } from 'reactstrap';\n\nconst SignUpPage = () => (\n    <div>\n        <img className=\"bannerInicio\" alt=\"banner-inicio\" src=\"https://github.com/ItzelMB/GDL002-social-network/blob/master/public/src/imagenes/inicio-banner.png?raw=true\"></img>\n        <SignUpForm />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    username: '',\n    email: '',\n    passwordOne: '',\n    passwordTwo: '',\n    error: null,\n};\n\nclass SignUpFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { username, email, passwordOne } = this.state;\n\n        this.props.firebase\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\n        .then(authUser => {\n            return this.props.firebase\n            .user(authUser.user.uid)\n            .set({\n                username,\n                email,\n            });\n        })\n        .then(() => {\n            this.setState({ ...INITIAL_STATE });\n            this.props.history.push(ROUTES.HOME);\n        })\n        .catch(error => {\n            this.setState({ error });\n        });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    render() {\n        const {\n            username, email, passwordOne, passwordTwo, error,\n        } = this.state;\n\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === '' || email === '' || username === '';\n\n        return(\n            <form onSubmit={this.onSubmit}>\n                <input className=\"inputSignUp\" name=\"username\" value={username} onChange={this.onChange} type=\"text\" placeholder=\"Nombre completo\" autoComplete=\"off\"></input>\n                <div><input className=\"inputSignUp\" name=\"email\" value={email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\" autoComplete=\"off\"></input></div>\n                <input className=\"inputSignUp\" name=\"passwordOne\" value={passwordOne} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\" autoComplete=\"off\"></input>\n                <div><input className=\"inputSignUp\" name=\"passwordTwo\" value={passwordTwo} onChange={this.onChange} type=\"password\" placeholder=\"Confirmar contraseña\" autoComplete=\"off\"></input></div>\n                {/*<button className=\"btnSignUp\" disabled={isInvalid} type=\"submit\">Registrarse</button>*/}\n                <Button className=\"btnSignUp\" color=\"warning\" disabled={isInvalid} type=\"submit\">REGISTRARSE</Button>\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignUpLink = () => (\n    <p className=\"signUpParr\">¿No tienes cuenta? <Link to={ROUTES.SIGN_UP}>Aquí puedes crearla</Link></p>\n);\n\nconst SignUpForm = compose (\n    withRouter,\n    withFirebase,\n    )(SignUpFormBase);\n\nexport default SignUpPage;\n\nexport { Button };\n\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport './signIn.css';\nimport { SignUpLink } from '../SignUp';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nimport { Button } from 'reactstrap';\n\nconst SignInPage = () => (\n    <div>\n        <img className=\"bannerInicio\" alt=\"banner-inicio\" src=\"https://github.com/ItzelMB/GDL002-social-network/blob/master/public/src/imagenes/inicio-banner.png?raw=true\"></img>\n        <SignInForm />\n        <SignUpLink />\n    </div>\n);\n\nconst INITIAL_STATE = {\n    email: '',\n    password: '',\n    error: null,\n};\n\nclass SignInFormBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { ...INITIAL_STATE };\n    }\n\n    onSubmit = event => {\n        const { email, password } = this.state;\n\n        this.props.firebase\n            .doSignInWithEmailAndPassword(email, password)\n            .then(() => {\n                this.setState({ ...INITIAL_STATE });\n                this.props.history.push(ROUTES.HOME);\n            })\n            .catch(error => {\n                this.setState({ error });\n            });\n\n        event.preventDefault();\n    };\n\n    onChange = event => {\n        this.setState({ [event.target.name]: event.target.value })\n    };\n\n    render() {\n        const { email, password, error } = this.state;\n\n        const isInvalid = password === '' || email === '';\n\n        return (\n            <form className=\"formLogin\" onSubmit={this.onSubmit}>\n                <div><input className=\"inputLogin\" name=\"email\" value= {email} onChange={this.onChange} type=\"text\" placeholder=\"Correo electrónico\" autoComplete=\"off\"></input></div>\n                <div><input className=\"inputLogin\" name=\"password\" value= {password} onChange={this.onChange} type=\"password\" placeholder=\"Contraseña\" autoComplete=\"off\"></input></div>\n                <Button color=\"warning\" className=\"btnLogin\" disabled={isInvalid} type=\"submit\" >INICIAR SESIÓN</Button>\n                {/*<button disabled={isInvalid} type=\"submit\" >Iniciar sesión</button>*/}\n                {error && <p>{error.message}</p>}\n            </form>\n        );\n    }\n}\n\nconst SignInForm = compose(\n    withRouter,\n    withFirebase,\n)(SignInFormBase);\n\nexport default SignInPage;\n\nexport { SignInForm };\nexport { Button };","import React from 'react';\nimport SignInPage from '../SignIn';\n//import { SignUpForm } from '../SignUp';\n\nconst Landing = () => (\n    <div>\n        <SignInPage />\n        {/*<SignUpForm />*/}\n    </div>\n);\n\nexport default Landing;","import React from 'react';\nimport './footer.css';\n\nconst Footer = () => (\n    <footer>\n        <p className=\"footerParr\">Created by Perla, Jess & Itinna. 2019</p>\n    </footer>\n);\n\nexport default Footer;","import React, { Component } from 'react';\nimport './likes.css';\nimport { withFirebase } from '../Firebase';\n\nclass Likes extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            post: this.props.post,\n        }\n        console.log(this.props.firebase);\n    }\n\n    handleLike = () => {\n        //const postId = post.uid;\n        const postCopy =this.state.post;\n        postCopy.likes = postCopy.likes + 1;\n\n        this.setState({\n            post: postCopy\n        });\n\n        this.props.firebase.post(this.state.post.uid).set({\n            ...this.state.post,\n            likes: this.state.post.likes,\n        });\n    }\n\n    render() {\n        return(\n            <container className=\"container\">\n                <button className=\"like\" onClick={this.handleLike}><i class=\"fas fa-heart\"></i></button>\n                <p className=\"counter\">{this.state.post.likes}</p>\n            </container>\n        );\n    }\n};\n\nexport default withFirebase(Likes);","import React, { Component } from 'react';\nimport './photoUpload.css';\n\nclass PhotoUpload extends Component {\n\n    render(){\n        return(\n            <React.Fragment>\n                <progress value={this.props.uploadValue}></progress>\n                <label for=\"uploadPhoto\"><i class=\"fas fa-file-upload\"></i></label>\n                <input type=\"file\" id=\"uploadPhoto\" onChange={this.props.onUpload}></input>\n            </React.Fragment>\n        )\n    }\n};\n\nexport default PhotoUpload;","import React, { Component } from 'react';\nimport { compose } from 'recompose';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\nimport './home.css';\nimport { Button } from 'reactstrap';\nimport Footer from '../Footer';\nimport Likes from '../Likes';\nimport PhotoUpload from '../PhotoUpload';\n\nconst HomePage = () => (\n    <div>\n        {/*<p>Esta página es accesible para todos los usuarios con cuenta de sesión iniciada.</p>*/}\n\n        <Posts />\n        <Footer />\n    </div>\n);\n\nclass PostsBase extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: '',\n            loading: false,\n            posts: [],\n            photo: null,\n            uploadValue: 0,\n            likes: 0,\n        };\n\n        //this.handlePhotoUpload = this.handlePhotoUpload.bind(this);\n    }\n\n    onChangeText = event => {\n        this.setState({ text: event.target.value });\n    };\n\n    onCreatePosts = (event, authUser) => {\n        let userName;\n        const refThis = this;\n        console.log('photo url' + refThis.state.photo);\n\n        this.props.firebase.users().child(authUser.uid).child('username').once('value')\n        .then(function(dataSnapshot) {\n            userName = dataSnapshot.val();\n        })\n        .then(function(){\n            refThis.props.firebase.posts().push({\n                text: refThis.state.text,\n                userId: authUser.uid,\n                username: userName,\n                time: refThis.props.firebase.serverValue.TIMESTAMP,\n                photoUrl: refThis.state.photo,\n            });\n\n            refThis.setState({ text: '' });\n\n            event.persist();\n        });\n\n    };\n\n    onRemovePost = uid => {\n        this.props.firebase.post(uid).remove();\n    };\n\n    onEditPost = (post, text) => {\n        const { uid, ...postSnapshot } = post;\n\n        this.props.firebase.post(post.uid).set({\n            ...postSnapshot,\n            text,\n            editTime: this.props.firebase.serverValue.TIMESTAMP,\n        });\n    };\n\n    handlePhotoUpload = event => {\n        const file = event.target.files[0];\n        const storageRef = this.props.firebase.storageRef(`/photos/${file.name}`);\n        const uploadFile = storageRef.put(file)\n\n        const thisUpload = this;\n\n        uploadFile.on('state_changed', snapshot => {\n            let percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            thisUpload.setState({\n                uploadValue: percentage,\n            })\n        }, error => {\n            console.log(error.message)\n        }, () => {\n            uploadFile.snapshot.ref.getDownloadURL().then(\n                (url) => {\n                    console.log(url);\n                    thisUpload.setState({\n                        uploadValue: 100,\n                        photo: url,\n                    });\n                }\n            );\n        });\n    }\n\n    componentDidMount() {\n        this.setState({ loading: true });\n\n        this.props.firebase.posts().on('value', snapshot => {\n            const postObject = snapshot.val();\n\n            if (postObject) {\n                const postsList = Object.keys(postObject).map(key => ({\n                    ...postObject[key],\n                    uid: key,\n                }));\n                this.setState({\n                    posts: postsList.reverse(),\n                    loading: false,\n                });\n            } else {\n                this.setState({ posts: null, loading:false });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.posts().off();\n    }\n\n    render() {\n        const { text, posts, loading } = this.state;\n\n        const noPublish = text === '';\n\n        return (\n            <AuthUserContext.Consumer>\n                {authUser => (\n                    <div>\n                        <form className=\"formPost\" onSubmit={event => this.onCreatePosts(event, authUser)}>\n                            <h4>Poua una historia</h4>\n                            <textarea className=\"createPostArea\" type=\"text\" value={text} onChange={this.onChangeText} cols=\"90\" rows=\"6\" placeholder=\"Comienza a escribir aquí tu historia...\"></textarea>\n                            <div>\n                                <PhotoUpload onUpload={this.handlePhotoUpload} uploadValue={this.state.uploadValue} />\n                                <Button className=\"btnPublish\" color=\"warning\" type=\"submit\" disabled={noPublish}>PUBLICAR</Button>\n                            </div>\n                        </form>\n\n                        {loading && <div>Cargando publicaciones ...</div>}\n                        {posts ? (\n                            <div>\n                                <PostList\n                                    authUser={authUser}\n                                    posts={posts}\n                                    onRemovePost={this.onRemovePost}\n                                    onEditPost={this.onEditPost}\n                                />\n                            </div>\n                        ) : (\n                            <div>Aún no hay publicaciones ...</div>\n                        )}\n                    </div>\n                )}\n            </AuthUserContext.Consumer>\n        );\n    }\n}\n\nclass PostItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state={\n            editMode: false,\n            editText: this.props.post.text,\n        };\n    }\n\n    onToggleEditMode = () => {\n        this.setState(state => ({\n            editMode: !state.editMode,\n            editText: this.props.post.text,\n        }));\n    };\n\n    onChangeEditText = event => {\n        this.setState({ editText: event.target.value });\n    };\n\n    onSaveEditText = () => {\n        this.props.onEditPost(this.props.post, this.state.editText);\n\n        this.setState({ editMode: false });\n    };\n\n    render() {\n        const { authUser, post, onRemovePost } = this.props;\n        const { editMode, editText } = this.state;\n        console.log(post);\n\n        return(\n            <li className=\"post\">\n                {authUser.uid === post.userId && (\n                    <span className=\"btnsContainer\">\n                        {editMode ? (\n                            <span>\n                                <Button color=\"warning\" onClick={this.onSaveEditText}>Guardar</Button>\n                                <Button color=\"warning\" onClick={this.onToggleEditMode}>Cancelar</Button>\n                            </span>\n                        ) : (\n                            <Button color=\"warning\" onClick={this.onToggleEditMode}><i class=\"fas fa-edit\"></i></Button>\n                            //<button onClick={this.onToggleEditMode}>Editar</button>\n                        )}\n\n                        {!editMode && (\n                            <Button color=\"warning\" type=\"button\" onClick={() => onRemovePost(post.uid)}><i class=\"fas fa-trash-alt\"></i></Button>\n                            //<button type=\"button\" onClick={() => onRemoveMessage(message.uid)}>Eliminar</button>\n                        )}\n                    </span>\n                )}\n\n                {editMode ? (\n                    <textarea type=\"text\" value={editText} onChange={this.onChangeEditText}></textarea>\n                ) : (\n                    <span>\n                        <strong>{post.username + \" cuenta que...\"}</strong>\n                        <div className=\"textPost\">\n                            {post.text}\n                            {post.editTime && <span><strong> (Editado)</strong></span>}\n                            <div>\n                                <img src={post.photoUrl} alt='' className=\"postImage\"></img>\n                            </div>\n                        </div>\n                    </span>\n                )}\n\n                <Likes firebase={this.props.firebase} post={post} />\n            </li>\n        );\n    }\n}\n\n\nconst Posts = withFirebase(PostsBase);\n\nconst PostList = ({ authUser, posts, onRemovePost, onEditPost }) => (\n    <ul>\n        {posts.map(post => (\n            <PostItem\n                authUser={authUser}\n                key={post.uid}\n                post={post}\n                onRemovePost={onRemovePost}\n                onEditPost={onEditPost}\n            />\n        ))}\n    </ul>\n);\n\nconst condition = authUser => !!authUser;\n\nexport default compose(withAuthorization(condition))(HomePage);\n\nexport { Button };","import React from 'react';\n\nconst Account = () => (\n    <div>\n        <h1>Account</h1>\n    </div>\n);\n\nexport default Account;","import React, { Component } from 'react';\nimport { withFirebase } from '../Firebase';\n\nclass AdminPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            users: [],\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ loading:true });\n\n        this.props.firebase.users().on('value', snapshot => {\n            const usersObject = snapshot.val();\n\n            const usersList = Object.keys(usersObject).map(key => ({\n                ...usersObject[key],\n                uid:key,\n            }));\n\n            this.setState({\n                users: usersList,\n                loading: false,\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        this.props.firebase.users().off();\n    }\n\n    render() {\n        const { users, loading } = this.state;\n\n        return(\n            <div>\n                <h1>Admin</h1>\n                {loading && <div>Loading ...</div>}\n                <UserList users={users} />\n            </div>\n        );\n    }\n}\n\nconst UserList = ({ users }) => (\n    <ul>\n        {users.map(user => (\n            <li key={user.uid}>\n                <span>\n                    <strong>ID: </strong> {user.uid}\n                </span>\n                <span>\n                    <strong>Correo electrónico: </strong> {user.email}\n                </span>\n                <span>\n                    <strong>Usuario: </strong> {user.username}\n                </span>\n            </li>\n        ))}\n    </ul>\n)\n\nexport default withFirebase(AdminPage);","import React from 'react';\nimport { HashRouter as Router, Route, } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport { withAuthentication } from '../Session';\n\nimport Navigation from '../Navigation';\nimport LandingPage from '../Landing';\nimport SignUpPage from '../SignUp';\nimport SignInPage from '../SignIn';\nimport HomePage from '../Home';\nimport AccountPage from '../Account';\nimport AdminPage from '../Admin';\n\nconst App = () => (\n    <Router>\n        <div>\n            <Navigation />\n\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n            <Route path={ROUTES.HOME} component={HomePage} />\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\n            <Route path={ROUTES.ADMIN} component={AdminPage} />\n        </div>\n    </Router>\n);\n\nexport default withAuthentication(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root'),\n    );\n\nserviceWorker.unregister();"],"sourceRoot":""}